# Generated by Django 4.2.11 on 2024-03-18 15:23

from django.db import migrations
from django.db.models import Count, F, Window
from django.db.models.functions import Lag


def cleanup_duplicates(model):
    # Find all QR bag histories with more than one entry per bag
    qs1 = model.objects.order_by().values("id").annotate(c=Count("id")).filter(c__gt=1)
    # Annotate subset
    qs2 = (
        model.objects
        .filter(id__in=qs1.values_list("id", flat=True))
        .annotate(
            prev_status=Window(
                expression=Lag("status"),
                partition_by="id",
                order_by="history_date",
            )
        )
        .filter(prev_status=F("status"))
    )
    qs2.delete()


def cleanup_status(apps, schema_editor):
    QRBag = apps.get_model("esani_pantportal", "QRBag")
    HistoricalQRBag = apps.get_model("esani_pantportal", "HistoricalQRBag")

    allowed_statuses = (
        "butik_oprettet",
        "backbone_modtaget",
        "pantsystem_modtaget",
        "esani_optalt",
        "esani_udbetalt",
    )

    for model in (QRBag, HistoricalQRBag):
        num = (
            model.objects
            .filter(status="esani_modtaget")
            .update(status="pantsystem_modtaget")
        )
        print(
            "Updated %d %s objects from status=esani_modtaget to "
            "status=pantsystem_modtaget"
            % (num, model.__name__)

        )

        outsiders = model.objects.exclude(status__in=allowed_statuses)
        stats = outsiders.values("status").annotate(Count("id")).order_by("status")
        num = outsiders.count()
        outsiders.delete()
        print(
            "Deleted %d %s objects with disallowed statuses: \n%s"
            % (num, model.__name__, "\n".join(str(row) for row in stats))
        )

    cleanup_duplicates(HistoricalQRBag)


class Migration(migrations.Migration):

    dependencies = [
        ("esani_pantportal", "0054_alter_historicalqrbag_status_alter_qrbag_status"),
    ]

    operations = [
        migrations.RunPython(cleanup_status)
    ]
