# Generated by Django 4.2.2 on 2024-02-15 11:50

from django.db import migrations
from django.db.models.functions import Length

from esani_pantportal.management.commands.import_deposit_payouts_qrbag import Command
from esani_pantportal.models import DepositPayout


def backfill_deposit_payout_items(apps, schema_editor):
    DepositPayoutItem = apps.get_model("esani_pantportal", "DepositPayoutItem")
    QRBag = apps.get_model("esani_pantportal", "QRBag")

    # Find all objects which have not yet been linked to a company branch or kiosk, due
    # to unrecognized QR codes in `consumer_identity`.
    qs = (
        DepositPayoutItem.objects
        .annotate(consumer_identity_length=Length("consumer_identity"))
        .filter(
            deposit_payout__source_type=DepositPayout.SOURCE_TYPE_API,
            consumer_identity__isnull=False,
            company_branch__isnull=True,
            kiosk__isnull=True,
        )
        .exclude(consumer_identity_length=18)
    )

    # Update all found objects by re-evaluating their QR code.
    command = Command()
    updated = 0
    skipped = 0
    for obj in qs:
        try:
            matching_qr_bag = command._get_qr_bag(
                obj.consumer_identity,
                qr_bag_model=QRBag,
            )
        except QRBag.DoesNotExist:
            skipped += 1
        else:
            if matching_qr_bag:
                obj.company_branch = matching_qr_bag.company_branch
                obj.kiosk = matching_qr_bag.kiosk
                obj.save()
                updated += 1
            else:
                skipped += 1

    print(f"Completed backfill: {updated=}, {skipped=}")


class Migration(migrations.Migration):

    dependencies = [
        ("esani_pantportal", "0040_alter_user_show_approval_date_and_more"),
    ]

    operations = [
        migrations.RunPython(backfill_deposit_payout_items),
    ]
